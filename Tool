<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> ÿ≠ŸÅÿ∏ ÿßŸÑŸÇÿ±ÿ¢ŸÜ</title>
    <style>
        :root {
            --bg-color: #f0f0f0;
            --text-color: #333;
            --input-bg: #fff;
            --input-border: #ccc;
            --button-bg: #4CAF50;
            --button-color: #fff;
            --button-hover: #45a049;
            --reset-button-bg: #f44336;
            --reset-button-hover: #da190b;
            --display-bg: #fff;
            --display-border: #ccc;
        }

        .dark-mode {
            --bg-color: #1a1a1a;
            --text-color: #f0f0f0;
            --input-bg: #333;
            --input-border: #555;
            --button-bg: #5cb85c;
            --button-color: #fff;
            --button-hover: #4cae4c;
            --reset-button-bg: #d9534f;
            --reset-button-hover: #c9302c;
            --display-bg: #333;
            --display-border: #555;
        }

        body {
            font-family: 'Traditional Arabic', 'Amiri', serif;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        #darkModeToggle {
            position: fixed;
            top: 20px;
            left: 20px;
            font-size: 24px;
            cursor: pointer;
            background: none;
            border: none;
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        #darkModeToggle:hover {
            transform: scale(1.1);
        }

        #inputArea {
            width: 100%;
            max-width: 600px;
            margin-bottom: 20px;
        }

        #surahText {
            width: 100%;
            height: 100px;
            padding: 10px;
            font-size: 18px;
            border: 1px solid var(--input-border);
            border-radius: 5px;
            resize: vertical;
            direction: rtl;
            background-color: var(--input-bg);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        #displayArea {
            width: 100%;
            max-width: 600px;
            min-height: 200px;
            background-color: var(--display-bg);
            border: 1px solid var(--display-border);
            border-radius: 5px;
            padding: 20px;
            margin-bottom: 20px;
            text-align: center;
            font-size: 28px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            transition: all 0.3s ease;
        }

        #verseDisplay {
            margin-bottom: 10px;
        }

        #progressIndicator {
            font-size: 18px;
            color: var(--text-color);
            margin-top: 10px;
            opacity: 0.7;
        }

        .button {
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
            background-color: var(--button-bg);
            color: var(--button-color);
            border: none;
            border-radius: 5px;
            margin: 5px;
            transition: all 0.3s ease;
        }

        .button:hover {
            background-color: var(--button-hover);
        }

        #resetBtn {
            background-color: var(--reset-button-bg);
        }

        #resetBtn:hover {
            background-color: var(--reset-button-hover);
        }
    </style>
</head>
<body>
    <button id="darkModeToggle">‚òÄÔ∏è</button>
    <h1>ÿ£ÿØÿßÿ© ÿ≠ŸÅÿ∏ ÿßŸÑŸÇÿ±ÿ¢ŸÜ</h1>
    <div id="inputArea">
        <textarea id="surahText" placeholder="ÿßŸÑÿµŸÇ ŸÜÿµ ÿßŸÑÿ≥Ÿàÿ±ÿ© ÿßŸÑŸÇÿ±ÿ¢ŸÜŸäÿ© ŸáŸÜÿß (ŸÖÿ™ÿ∂ŸÖŸÜŸãÿß ÿ£ÿ±ŸÇÿßŸÖ ÿßŸÑÿ¢Ÿäÿßÿ™)"></textarea>
    </div>
    <div id="displayArea">
        <div id="verseDisplay"></div>
        <div id="progressIndicator"></div>
    </div>
    <div>
        <button id="nextBtn" class="button">ÿßŸÑÿ¢Ÿäÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ©</button>
        <button id="resetBtn" class="button">ÿ•ÿπÿßÿØÿ© ÿ™ÿπŸäŸäŸÜ</button>
    </div>

    <script>
        const surahText = document.getElementById('surahText');
        const verseDisplay = document.getElementById('verseDisplay');
        const progressIndicator = document.getElementById('progressIndicator');
        const nextBtn = document.getElementById('nextBtn');
        const resetBtn = document.getElementById('resetBtn');
        const darkModeToggle = document.getElementById('darkModeToggle');

        let verses = [];
        let currentVerseIndex = -1;

        function processInput() {
            const text = surahText.value.trim();
            verses = text.split(/[Ÿ†-Ÿ©]+/).filter(verse => verse.trim() !== '');
            currentVerseIndex = -1;
            updateDisplay();
        }

        function updateDisplay() {
            if (verses.length > 0 && currentVerseIndex >= 0 && currentVerseIndex < verses.length) {
                verseDisplay.textContent = verses[currentVerseIndex];
                progressIndicator.textContent = `ÿßŸÑÿ¢Ÿäÿ© ${arabicToWesternNumerals(currentVerseIndex + 1)} ŸÖŸÜ ${arabicToWesternNumerals(verses.length)}`;
            } else if (currentVerseIndex === -1) {
                verseDisplay.textContent = "ÿßŸÜŸÇÿ± ÿπŸÑŸâ 'ÿßŸÑÿ¢Ÿäÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ©' ŸÑŸÑÿ®ÿØÿ°";
                progressIndicator.textContent = `Ÿ† ŸÖŸÜ ${arabicToWesternNumerals(verses.length)} ÿ¢Ÿäÿ©`;
            } else {
                verseDisplay.textContent = "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿßŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑÿ¢Ÿäÿßÿ™";
                progressIndicator.textContent = `${arabicToWesternNumerals(verses.length)} ŸÖŸÜ ${arabicToWesternNumerals(verses.length)} ÿ¢Ÿäÿ©`;
            }
        }

        function arabicToWesternNumerals(number) {
            const arabicNumerals = ['Ÿ†', 'Ÿ°', 'Ÿ¢', 'Ÿ£', 'Ÿ§', 'Ÿ•', 'Ÿ¶', 'Ÿß', 'Ÿ®', 'Ÿ©'];
            return number.toString().split('').map(digit => arabicNumerals[digit]).join('');
        }

        nextBtn.addEventListener('click', () => {
            if (currentVerseIndex < verses.length - 1) {
                currentVerseIndex++;
                updateDisplay();
            }
        });

        resetBtn.addEventListener('click', () => {
            surahText.value = "";
            verses = [];
            currentVerseIndex = -1;
            updateDisplay();
        });

        surahText.addEventListener('input', processInput);

        darkModeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode');
            darkModeToggle.textContent = document.body.classList.contains('dark-mode') ? 'üåô' : '‚òÄÔ∏è';
        });
    </script>
</body>
</html>
